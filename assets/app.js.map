{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/MouseEventWrapper.js","webpack:///./src/video.js","webpack:///./src/audio.js","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","MouseEventWrapper","test","navigator","userAgent","video","timerId","document","addEventListener","getElementById","setupHls","Hls","isSupported","hls","loadSource","attachMedia","on","Events","MANIFEST_PARSED","console","log","canPlayType","src","playVideo","promise","play","undefined","then","clearTimeout","catch","setTimeout","setCurrentTime","currentTime","audiocontext","AudioContext","webkitAudioContext","mastergain","createGain","compressor","createDynamicsCompressor","listener","spriteTimes","start","end","sources","gains","panners","analysers","audioStates","prevCurrentTimes","audioBuffer","isPlaying","isLoading","positions","x","y","z","AFRAME","registerComponent","init","this","el","pause","len","stop","setAttribute","createAnalyser","smoothingTimeConstant","gain","createPanner","panningModel","distanceModel","pos","worldPos","THREE","Vector3","setFromMatrixPosition","object3D","matrixWorld","setPosition","createBufferSource","buffer","connect","destination","loopStart","loopEnd","loop","arrayShuffle","arr","rnd","Math","floor","random","tmp","g","sqrt","boxVecs","boxEls","boxNum","boxWidth","boxAxis","frequencyIndexRange","min","max","primitive","radius","color","transparent","opacity","createElement","normalize","boxHeight","boxVec","boxEl","width","height","depth","clone","multiplyScalar","quaternion","setFromUnitVectors","append","tick","Uint8Array","frequencyBinCount","getByteFrequencyData","validRange","validDataSize","chunkSize","chunkRem","k","sum","rate","calcHeight","boxColor","calcColor","clr","async","setup","state","resume","removeEventListener","START","object3d","updateMatrixWorld","position","mOrientation","vFront","applyMatrix4","vUp","setOrientation","xhr","XMLHttpRequest","open","responseType","send","onload","decodeAudioData","response","load"],"mappings":"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","file":"app.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/assets/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([6,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export class MouseEventWrapper {\n  static CLICK = 'click';\n  static START = /iPhone|iPad|iPod|Android/.test(navigator.userAgent) ? 'touchstart' : 'mousedown';\n  static MOVE  = /iPhone|iPad|iPod|Android/.test(navigator.userAgent) ? 'touchmove'  : 'mousemove';\n  static END   = /iPhone|iPad|iPod|Android/.test(navigator.userAgent) ? 'touchend'   : 'mouseup';\n}\n","import Hls from 'hls.js';\n\nconst playlistfile = './assets/video/video.m3u8';\n// const playlistfile = 'http://shin.hongo.wide.ad.jp:50080/video/billboard1_er/video.m3u8';\n\nlet video   = null;\nlet timerId = null;\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  video = document.getElementById('video');\n}, true);\n\nexport const setupHls = () => {\n  if (Hls.isSupported()) {\n    const hls = new Hls();\n\n    hls.loadSource(playlistfile);\n    hls.attachMedia(video);\n\n    hls.on(Hls.Events.MANIFEST_PARSED, () => {\n      // playVideo();\n      console.log('video is ready');\n    });\n  } else if (video.canPlayType('application/vnd.apple.mpegurl')) {\n    video.src = playlistfile;\n\n    video.addEventListener('loadedmetadata', () => {\n      // playVideo();\n      console.log('video is ready');\n    });\n  }\n};\n\n// video.play()でPromiseがrejectされる場合（音声が必要な場合など）の対策\n// 1秒ごとに再生を試みる（クライアントが何らかの操作を加えると再生できるようになる）\nexport const playVideo = () => {\n  const promise = video.play();\n\n  if (promise !== undefined) {\n    promise.then(() => {\n      clearTimeout(timerId);\n      timerId = null;\n    }).catch(() => {\n      timerId = setTimeout(playVideo, 1000);\n    });\n  }\n};\n\nexport const pauseVideo = () => {\n  // NOTE: https://developers.google.com/web/updates/2017/06/play-request-was-interrupted\n  video.play()\n    .then(() => {\n      video.pause();\n    })\n    .catch(() => {\n      // TODO: エラーハンドリング\n    });\n};\n\nexport const setCurrentTime = (currentTime) => {\n  video.currentTime = currentTime;\n};\n\n// const mediaCurrTime = (media, str) => {\n//   console.log(`${str} CURRENT TIME: ${media.currentTime}`);\n//   setTimeout(() => { mediaCurrTime(media, str) }, 1000);\n// };\n","import AFRAME from 'aframe';\nimport { setupHls, playVideo, pauseVideo, setCurrentTime } from './video';\n\nconst AudioContext = window.AudioContext || window.webkitAudioContext;\n\nconst audiocontext = new AudioContext();\nconst mastergain   = audiocontext.createGain();\nconst compressor   = audiocontext.createDynamicsCompressor();\nconst listener     = audiocontext.listener;\n\nconst MAX_VOLUME = 0.5;\nconst SPRITE_TIME = 194.61224489;\nconst spriteTimes = [\n  { start: 784, end: 784 + SPRITE_TIME },\n  { start: 0,   end: SPRITE_TIME },\n  { start: 196, end: 196 + SPRITE_TIME }\n];\n\n// 音関連の変数\nconst sources   = [];\nconst gains     = [];\nconst panners   = [];\nconst analysers = [];\n\n// ファイルのON/OFF管理変数は全部offにしておく\nconst audioStates = [false, false, false];\n\nconst prevCurrentTimes = [0, 0, 0];\n\nlet audioBuffer = null;\n\nlet isPlaying = false;\nlet isLoading = true;\n\n// 各楽器のスイッチの変数\nconst positions = [\n  { x:    3, y: 0.5, z: -5 },\n  { x:   -3, y:   1, z: -5 },\n  { x: -0.5, y: 0.7, z: -5 }\n];\nconst scale = 0.3; // 見た目の問題で仮で0.3としておきます\n\n// 音楽を再生するためのスイッチ(色: cyan)を押したときの処理\nAFRAME.registerComponent('cursor-listener-switch', {\n  init: function() {\n    // 'touchstart' では, iOS でイベントが発生しない\n    this.el.addEventListener('mousedown', function() {\n      if (isLoading) {\n        return;\n      }\n\n      if (isPlaying) {\n        pauseVideo();\n\n        for (let i = 0, len = spriteTimes.length; i < len; i++) {\n          sources[i].stop(0);\n        }\n\n        this.setAttribute('material', 'color', 'cyan');\n        isPlaying = false;\n      } else {\n        playVideo();\n\n        for (let i = 0, len = spriteTimes.length; i < len; i++) {\n          analysers[i] = audiocontext.createAnalyser();\n          // 時間信号に対する周波数データの応答性 (0 ~ 1)\n          // 0 -> 鋭い(瞬時)\n          // 1 -> 鈍い\n          // default: 0.8\n          analysers[i].smoothingTimeConstant = 0.7;\n\n          gains[i] = audiocontext.createGain();\n          gains[i].gain.value = MAX_VOLUME;\n\n          panners[i] = audiocontext.createPanner();\n          panners[i].panningModel  = 'equalpower';\n          panners[i].distanceModel = 'inverse';\n\n          // それぞれの音源の位置を取得して反映\n          const pos = document.getElementById(`sphere${i}`);\n          const worldPos = new THREE.Vector3();\n\n          worldPos.setFromMatrixPosition(pos.object3D.matrixWorld);\n\n          const { x, y, z } = worldPos;\n\n          panners[i].setPosition(x, y, z);\n\n          // `AudioBufferSourceNode` は使い捨てのノードなので, 停止したあとは再度生成する必要がある\n          sources[i] = audiocontext.createBufferSource();\n          sources[i].buffer = audioBuffer;\n\n          sources[i].connect(gains[i]);\n          gains[i].connect(panners[i]);\n          panners[i].connect(analysers[i]);\n          analysers[i].connect(mastergain);\n          mastergain.connect(compressor);\n          compressor.connect(audiocontext.destination);\n\n          sources[i].loopStart = spriteTimes[i].start;\n          sources[i].loopEnd   = spriteTimes[i].end;\n\n          let currentTime = prevCurrentTimes[i] > 0 ? (audiocontext.currentTime - prevCurrentTimes[i]) : 0;\n\n          if (currentTime > SPRITE_TIME) {\n              currentTime = 0;\n              prevCurrentTimes[i] = 0;\n          }\n\n          sources[i].start(0, (spriteTimes[i].start + currentTime), (spriteTimes[i].end - spriteTimes[i].start - currentTime));\n\n          // Chrome の場合, `AudioBufferSourceNode#start` に設定しないとループしない\n          sources[i].loop = true;\n\n          setCurrentTime(currentTime);\n\n          prevCurrentTimes[i] = audiocontext.currentTime;\n        }\n\n        this.setAttribute('material', 'color', 'gray');\n        isPlaying = true;\n      }\n    });\n  }\n});\n\n// 配列をシャッフルする(boxVecs用)\nconst arrayShuffle = (arr) => {\n  let len = arr.length;\n\n  while (len > 0) {\n    const rnd = Math.floor(Math.random() * len);\n    const tmp = arr[len - 1];\n    arr[len - 1] = arr[rnd];\n    arr[rnd] = tmp;\n    len--;\n  }\n};\n\n// 各楽器の ON/OFF\nfor (let i = 0, len = spriteTimes.length; i < len; i++) {\n\n  // visualizer 関連の変数\n\n  // 黄金比\n  const g = (1 + Math.sqrt(5)) / 2;\n  // 正二十面体の各頂点           : 12点\n  // 正二十面体の各正三角形の重心 : 20点\n  // 合わせて32点をvisualizerに用いる\n  // 32点の方向ベクトル(yが小さい順に並べる)\n  const boxVecs = [\n    // y = -g\n    [ 1, -g, 0],\n    [-1, -g, 0],\n    // y = -(2g+1)/3\n    [0, -(2 * g + 1) / 3,  g / 3],\n    [0, -(2 * g + 1) / 3, -g / 3],\n    // y = -1\n    [0, -1,  g],\n    [0, -1, -g],\n    // y = -(g+1)/3\n    [ (g + 1) / 3, -(g + 1) / 3,  (g + 1) / 3],\n    [ (g + 1) / 3, -(g + 1) / 3, -(g + 1) / 3],\n    [-(g + 1) / 3, -(g + 1) / 3, -(g + 1) / 3],\n    [-(g + 1) / 3, -(g + 1) / 3,  (g + 1) / 3],\n    // y = -g/3\n    [ (2 * g + 1) / 3, -g / 3, 0],\n    [-(2 * g + 1) / 3, -g / 3, 0],\n    // y = 0\n    [ g / 3, 0,  (2 * g + 1) / 3],\n    [ g, 0,  1],\n    [ g, 0, -1],\n    [ g / 3, 0, -(2 * g + 1) / 3],\n    [-g / 3, 0, -(2 * g + 1) / 3],\n    [-g, 0, -1],\n    [-g, 0,  1],\n    [-g / 3, 0,  (2 * g + 1) / 3],\n    // y = g/3\n    [ (2 * g + 1) / 3, g / 3, 0],\n    [-(2 * g + 1) / 3, g / 3, 0],\n    // y = (g+1)/3\n    [ (g + 1) / 3, (g + 1) / 3,  (g + 1) / 3],\n    [ (g + 1) / 3, (g + 1) / 3, -(g + 1) / 3],\n    [-(g + 1) / 3, (g + 1) / 3, -(g + 1) / 3],\n    [-(g + 1) / 3, (g + 1) / 3,  (g + 1) / 3],\n    // y = 1\n    [0, 1,  g],\n    [0, 1, -g],\n    // y = (2g+1)/3\n    [0, (2 * g + 1) / 3,  g / 3],\n    [0, (2 * g + 1) / 3, -g / 3],\n    // y = g\n    [ 1, g, 0],\n    [-1, g, 0]\n  ];\n  const boxEls = [];\n\n  const boxNum = boxVecs.length;\n  const boxWidth = 0.15;\n  const boxAxis = new THREE.Vector3(0, 1, 0);\n\n  // 有効データのインデックスの上限・下限を記録\n  const frequencyIndexRange = { min: null, max: null };\n\n  // 周波数配置を順番通りにする場合は下の行をコメントアウトする\n  arrayShuffle(boxVecs);\n\n  AFRAME.registerComponent(`cursor-listener${i}`, {\n    init: function() {\n      this.el.setAttribute('geometry', {\n        primitive: 'sphere',\n        radius: 0.6\n      });\n      this.el.setAttribute('position', positions[i]);\n      this.el.setAttribute('scale', { x: scale, y: scale, z: scale });\n      // スイッチ本体の opacity は仮で 0\n      // ただしスイッチの後ろにある box は描画されない\n      this.el.setAttribute('material', {\n        color: 'gray',\n        transparent: true,\n        opacity: 0\n      });\n\n      for (let j = 0; j < boxNum; j++) {\n        boxEls[j] = document.createElement('a-entity');\n        // boxVecs を単位ベクトルに直して更新\n        boxVecs[j] = new THREE.Vector3(...boxVecs[j]).normalize();\n\n        const boxHeight = 0.1;\n        const boxVec = boxVecs[j];\n        const boxEl = boxEls[j];\n        boxEl.setAttribute('geometry', {\n          primitive: 'box',\n          width: boxWidth,\n          height: boxHeight,\n          depth: boxWidth\n        });\n        // スイッチの球(半径 0.5 )の中心から boxVec 方向 1 離れた位置に配置\n        // boxHeight / 2 は配置の基点を box の中心から box の端に変えるための補正項\n        boxEl.setAttribute('position', boxVec.clone().multiplyScalar(boxHeight / 2 + 1));\n        boxEl.setAttribute('material', {\n          color: 'gray',\n          transparent: true,\n          opacity: 0.9\n        });\n        // boxVec 方向に沿って box を回転(球の中心を向く)\n        boxEl.object3D.quaternion.setFromUnitVectors(boxAxis, boxVec);\n\n        this.el.append(boxEl);\n      }\n\n      // 'touchstart' では, iOS でイベントが発生しない\n      this.el.addEventListener('mousedown', function() {\n        if (!isPlaying) {\n          return;\n        }\n\n        if (audioStates[i]) {\n          //this.setAttribute('material', 'color', 'rgb(0, 255, 0)');\n          gains[i].gain.value = MAX_VOLUME;\n          audioStates[i] = false;\n        } else {\n          //this.setAttribute('material', 'color', 'gray');\n          gains[i].gain.value = 0;\n          audioStates[i] = true;\n        }\n      });\n    },\n    tick: function() {\n      if (!analysers[i]) {\n        return;\n      }\n\n      // スイッチの球本体のエフェクトは一旦消す\n      /*\n      // 音源の時間データを取得\n      const data = new Uint8Array(analysers[i].fftSize);\n\n      // `Uint8Array` と振幅値の対応\n      // 0   -> -1\n      // 128 ->  0\n      // 255 ->  1\n      analysers[i].getByteTimeDomainData(data);\n\n      let sum = 0;\n\n      // 振幅の大きさをとりたいので\n      // 128 との差の絶対値をとる\n      for (let j = 0; j < analysers[i].fftSize; j++) {\n        sum += Math.abs(data[j] - 128);\n      }\n\n      // 平均値を算出して ... (平均値は 0 ~ 128 に)\n      const average = (sum / analysers[i].fftSize);\n\n      // 正規化する (0 ~ 1)\n      // 0   -> 0\n      // 128 -> 1\n      const nAverage = average / 128;\n\n      // rateが小さいので指数関数でスケーリング\n      // x: original rate -> y: scaling rate\n      // y = 1 - 2^(-120x) (~= 1 - exp(-80x))\n      // x -> 0 付近が約 80 倍に増幅される\n      const rate = 1 - (2 ** (-120 * nAverage));\n\n      // ON: 音源に依存して変動 / OFF: 固定値\n      const scl = (gains[i].gain.value === 0) ? { x: scale, y: scale, z: scale } : listenerScale(rate);\n      const clr = (gains[i].gain.value === 0) ? 'gray' : listenerColor(rate);\n\n      this.el.setAttribute('scale', scl);\n      this.el.setAttribute('material', 'color', clr);\n      */\n\n      // 周波数データを取得(それぞれ 0 ~ 255 の数値)\n      const data = new Uint8Array(analysers[i].frequencyBinCount);\n      analysers[i].getByteFrequencyData(data);\n\n      // 有効データの下限を更新\n      if (frequencyIndexRange.min === null) {\n        frequencyIndexRange.min = analysers[i].frequencyBinCount - 1;\n      }\n\n      for (let j = 0; j < frequencyIndexRange.min; j++) {\n        if (data[j] !== 0) {\n          frequencyIndexRange.min = j;\n          break;\n        }\n      }\n\n      // 有効データの上限を更新\n      if (frequencyIndexRange.max === null) {\n        frequencyIndexRange.max = 0;\n      }\n\n      for (let j = analysers[i].frequencyBinCount - 1; j > frequencyIndexRange.max; j--) {\n        if (data[j] !== 0) {\n          frequencyIndexRange.max = j;\n          break;\n        }\n      }\n\n      // 周波数データの両端から常に 0 の範囲を除いたものを有効データとする\n      // validRange   : 有効データの下限と上限のインデックスの配列\n      // validDataSize: 有効データの要素数\n      const validRange = (frequencyIndexRange.max - frequencyIndexRange.min < 0) ? { min: 0, max: analysers[i].frequencyBinCount - 1 } : { min: frequencyIndexRange.min, max: frequencyIndexRange.max };\n      const validDataSize = validRange.max - validRange.min + 1;\n\n      // 有効データを boxNum 個のグループに分ける\n      // chunkSize: 1つのグループに含まれる最低限の要素数\n      // chunkRem : 余りの要素数\n      const chunkSize = Math.floor(validDataSize / boxNum);\n      const chunkRem = validDataSize % boxNum;\n\n      // boxNum 個の各グループごとに平均値をとる\n      // さらに平均値を正規化する(0 ~ 1)\n      //   0 -> 0\n      // 255 -> 1\n      for (let j = 0, k = validRange.min; j < boxNum; j++) {\n        // j: グループのインデックス\n        // k: 有効データのインデックス\n\n        // 1つのグループに含まれる要素数\n        const len = (j < chunkRem) ? chunkSize + 1 : chunkSize;\n\n        // グループ内データの和\n        let sum = 0;\n\n        for (let l = 0; l < chunkSize; l++) {\n          sum += data[k + l];\n        }\n\n        // 平均値\n        const average = (len === 0) ? 0 : sum / len;\n\n        // 正規化\n        const nAverage = average / 255;\n\n        // nAverage が小さいので指数関数でスケーリング\n        // x: original rate -> y: scaling rate\n        // y = 1 - 2^(-20x) (~= 1 - exp(-14x))\n        // x -> 0 付近が約 14 倍に増幅される\n        const rate = 1 - (2 ** (-20 * nAverage));\n\n        const boxHeight = (gains[i].gain.value === 0) ? 0.1 : calcHeight(rate);\n        const boxColor = (gains[i].gain.value === 0) ? 'gray' : calcColor(rate);\n\n        const boxVec = boxVecs[j];\n        const boxEl = boxEls[j];\n        boxEl.setAttribute('geometry', 'height', boxHeight);\n        boxEl.setAttribute('position', boxVec.clone().multiplyScalar(boxHeight / 2 + 1));\n        boxEl.setAttribute('material', 'color', boxColor);\n\n        // 有効データのインデックス更新\n        k += chunkSize;\n      }\n    }\n  });\n}\n\n// スイッチの球本体のエフェクトは一旦消す\n/*\n// 各楽器のスイッチの大きさを音源信号の強さに依存して変更\nconst listenerScale = (rate) => {\n  const scl = scale * (1 + rate);\n  return { x: scl, y: scl, z: scl };\n};\n*/\n\nconst calcHeight = (rate) => {\n  // 高さ 0 を返すと勝手に高さ1(?)ぐらいの box を表示されるので\n  // rate が 0.1 未満のときは 0.1 を返す\n  return (rate < 0.1) ? 0.1 : rate * 3;\n};\n\n// 時間信号 / 周波数信号の強さに依存して変更\n// [rate:小] blue < green < yellow < orange < red [rate:大]\nconst calcColor = (rate) => {\n  const clr = [0, 0, 0];\n\n  // rate を -1 ~ 1 の値に変換\n  // rate =   0 -> -1\n  // rate = 0.5 ->  0\n  // rate =   1 ->  1\n  rate = 2 * rate - 1;\n\n  // r成分\n  if (rate < 0) {\n    clr[0] = 0;\n  } else if (rate >= 0 && rate < 0.5) {\n    clr[0] = Math.floor(rate * 2 * 255);\n  } else {\n    clr[0] = 255;\n  }\n\n  // g成分\n  if (rate < -0.5) {\n    clr[1] = Math.floor((rate + 1.0) * 2 * 255);\n  } else if (rate >= -0.5 && rate < 0.5) {\n    clr[1] = 255;\n  } else {\n    clr[1] = 255 - Math.floor((rate - 0.5) * 2 * 255);\n  }\n\n  // b成分\n  if (rate < -0.5) {\n    clr[2] = 255;\n  } else if (rate >= -0.5 && rate < 0) {\n    clr[2] = 255 - Math.floor((rate + 0.5) * 2 * 255);\n  } else {\n    clr[2] = 0;\n  }\n\n  return `rgb(${clr[0]}, ${clr[1]}, ${clr[2]})`;\n};\n\n// camear(listener)の位置と向きを定常的に取得して反映\nAFRAME.registerComponent('rotation-reader', {\n  tick: function () {\n    const object3d = this.el.object3D;\n    object3d.updateMatrixWorld();\n\n    const matrixWorld = object3d.matrixWorld;\n    const position = new THREE.Vector3().setFromMatrixPosition(matrixWorld);\n\n    listener.setPosition(position.x, position.y, position.z);\n    // listener.positionX.value = position.x;\n    // listener.positionY.value = position.y;\n    // listener.positionZ.value = position.z;\n\n    const mOrientation = matrixWorld.clone();\n    mOrientation.setPosition({ x: 0, y: 0, z: 0 });\n\n    const vFront = new THREE.Vector3(0, 0, 1);\n    vFront.applyMatrix4(mOrientation);\n    vFront.normalize();\n\n    const vUp = new THREE.Vector3(0, -1, 0);\n    vUp.applyMatrix4(mOrientation);\n    vUp.normalize();\n\n    listener.setOrientation(vFront.x, vFront.y, vFront.z, vUp.x, vUp.y, vUp.z);\n    // listener.forwardX = vFront.x;\n    // listener.forwardY = vFront.y;\n    // listener.forwardZ = vFront.z;\n    // listener.upX = vUp.x;\n    // listener.upY = vUp.y;\n    // listener.upZ = vUp.z;\n  }\n});\n\nfunction load() {\n  // 音声ファイルを読み込む\n  const xhr = new XMLHttpRequest();\n\n  xhr.open('GET', './assets/audio/original.mp3', true);\n  xhr.responseType = 'arraybuffer';\n  xhr.send(null);\n\n  xhr.onload = () => {\n    audiocontext.decodeAudioData(xhr.response, (buffer) => {\n      audioBuffer = buffer;\n\n      setupHls();\n\n      document.getElementById('sphere-switch').setAttribute('material', 'color', 'cyan');\n      isLoading = false;\n    }, () => {\n      // TODO: エラーハンドリング\n    });\n  };\n\n  // TODO: エラーハンドリング\n  // xhr.onerror = () => {\n  // };\n}\n\nexport { audiocontext, load };\n","'use strict';\n\nimport { MouseEventWrapper } from './MouseEventWrapper';\nimport { audiocontext, load } from './audio';\n\nasync function setup() {\n  if (audiocontext.state !== 'running') {\n    await audiocontext.resume();\n  }\n\n  document.removeEventListener(MouseEventWrapper.START, setup, false);\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  document.addEventListener(MouseEventWrapper.START, setup, false);\n  load();\n}, true);\n"],"sourceRoot":""}